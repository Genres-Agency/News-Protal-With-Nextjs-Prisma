// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  SUPERADMIN
  JOURNALIST
  BANNED
}

// Define the status enum (to be used for both News and Categories)
enum NewsStatus {
  PUBLISHED
  PRIVATE
  SCHEDULED
}

enum MediaType {
  IMAGE
  VIDEO
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  password           String?
  role               UserRole  @default(USER)
  accounts           Account[]
  image              String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @default(now())
  isTwoFactorEnabled Boolean   @default(false)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// ------------------ News Post ------------------
model News {
  id          String     @id @default(cuid())
  title       String
  slug        String     @unique
  content     String
  category    String
  mediaId     String? // Foreign key for Media
  media       Media?     @relation(fields: [mediaId], references: [id])
  status      NewsStatus @default(PUBLISHED)
  scheduledAt DateTime? // This field will store the scheduled publication time
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

// Add this model to your schema
model Category {
  id          String     @id @default(cuid())
  name        String     @unique
  slug        String     @unique
  description String?
  status      NewsStatus @default(PUBLISHED) // Changed from CategoryStatus to NewsStatus
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Media {
  id          String    @id @default(cuid())
  title       String
  url         String
  type        MediaType
  description String?
  size        Int // in bytes
  mimeType    String // e.g., "image/jpeg", "video/mp4"
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  News        News[] // Relation to News
}
